html.cyclops {
  fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    min-width: initial;
  }

  legend {
    padding-bottom: (@padding-base-vertical * 2);
    line-height: 30px;
    font-size: 18px;
    margin-bottom: @form-group-margin-bottom;
    border-bottom: 1px solid @borderColor;
    width: 100%;
    
    .description {
      font-size: 13px;
      line-height: 20px;
      display: block;
    }
  }

  label {
    display: inline-block;
    max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
    margin-bottom: 5px;
    font-weight: 600;
  }

  // Normalize form controls
  //
  // While most of our form styles require extra classes, some basic normalization
  // is required to ensure optimum display with or without those classes to better
  // address browser inconsistencies.
  // Override content-box in Normalize (* isn't specific enough)
  
  input[type="search"] {
    .box-sizing(border-box);
  }

  // Position radios and checkboxes better
  input[type="radio"],
  input[type="checkbox"] {
    margin: 4px 0 0;
    margin-top: 1px \9; // IE8-9
    line-height: normal;
  }

  input[type="file"] {
    display: block;
  }

  // Make range inputs behave like textual form controls
  input[type="range"] {
    display: block;
    width: 100%;
  }

  // Make multiple select elements height not fixed
  select[multiple],
  select[size] {
    height: auto;
  }

  .form-control {
    display: block;
    width: 100%;
    height: @input-height-base;
    padding: 6px 12px;
    font-size: @font-size-base;
    line-height: 1.42857143;
    color: @textColor;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    
    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    
    &[disabled],
    &[readonly] {
      background-color: @input-bg-disabled;
      opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }

    &[disabled] {
      cursor: @cursor-disabled;
    }
  }

  // Reset height for `textarea`s to use specified rows
  textarea.form-control {
    height: auto;
  }

  // Form groups
  //
  // Designed to help with the organization and spacing of vertical forms. For
  // horizontal forms, use the predefined grid classes.
  
  .form-group {
    margin-bottom: @form-group-margin-bottom;
  }

  // Checkboxes and radios
  //
  // Indent the labels to position radios/checkboxes as hanging controls.
  
  .radio,
  .checkbox {
    position: relative;
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;
    
    label {
      min-height: @line-height-computed; // Ensure the input doesn't jump when there is no text
      padding-left: 20px;
      margin-bottom: 0;
      font-weight: 300;
      cursor: pointer;
    }
  }

  .radio input[type="radio"],
  .radio-inline input[type="radio"],
  .checkbox input[type="checkbox"],
  .checkbox-inline input[type="checkbox"] {
    position: absolute;
    margin-left: -20px;
    margin-top: 4px \9;
  }

  .radio + .radio,
  .checkbox + .checkbox {
    margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
  }

  // Radios and checkboxes on same line
  .radio-inline,
  .checkbox-inline {
    position: relative;
    display: inline-block;
    padding-left: 20px;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
  }

  .radio-inline + .radio-inline,
  .checkbox-inline + .checkbox-inline {
    margin-top: 0;
    margin-left: 10px; // space out consecutive inline controls
  }

  // Apply same disabled cursor tweak as for inputs
  // Some special care is needed because <label>s don't inherit their parent's `cursor`.
  //
  // Note: Neither radios nor checkboxes can be readonly.
  
  input[type="radio"],
  input[type="checkbox"] {
    &[disabled],
    &.disabled {
      cursor: @cursor-disabled;
    }
  }

  // These classes are used directly on <label>s
  .radio-inline,
  .checkbox-inline {
    &.disabled {
      cursor: @cursor-disabled;
    }
  }

  // These classes are used on elements with <label> descendants
  .radio,
  .checkbox {
    &.disabled {
      label {
        cursor: @cursor-disabled;
      }
    }
  }

  fieldset[disabled] {
    .form-control {
      background-color: @input-bg-disabled;
      opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
      cursor: @cursor-disabled;
    }

    input[type="radio"],
    input[type="checkbox"],
    .radio-inline,
    .checkbox-inline,
    .radio label,
    .checkbox label {
      cursor: @cursor-disabled;
    }
  }

  .control-label {
    font-size: @font-size-base - 1;
    margin-bottom: 5px;
  }

  .validationMessage {
    color: @errorText;
    margin: 0;
  }

  // Horizontal forms
  //
  // Horizontal forms are built on grid classes and allow you to create forms with
  // labels on the left and inputs on the right.
  
  .form-horizontal {
    
    // Consistent vertical alignment of radios and checkboxes
    //
    // Labels also get some reset styles, but that is scoped to a media query below.
    
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline {
      margin-top: 0;
      margin-bottom: 0;
      padding-top: @padding-base-vertical; // Default padding plus a border
    }

    // Account for padding we're adding to ensure the alignment and of help text
    // and other content below items
    
    .radio,
    .checkbox {
      min-height: (@line-height-computed + (@padding-base-vertical + 1));
    }

    // Make form groups behave like rows
    .form-group {
      .make-row();
      
      @media (min-width: @screen-sm-min) {
        p:first-of-type {
          padding-top: @padding-base-vertical;
        }
      }
    }

    // Reset spacing and right align labels, but scope to media queries so that
    // labels on narrow viewports stack the same as a default form example.
    
    @media (min-width: @screen-sm-min) {
      .control-label {
        text-align: right;
        margin-bottom: 0;
        padding-top: @padding-base-vertical;
      }
    }
  }

  // Help text
  //
  // Apply to any element you wish to create light text for placement immediately
  // below a form control. Use for general help, formatting, or instructional text.
  
  .help-block {
    display: block; // account for any element using help-block
    margin-top: 5px;
    margin-bottom: 10px;
    color: lighten(@textColor, 25%); // lighten the text some for contrast
  }

  // checkbox toggle
  .toggle {
    position: relative;
    width: 70px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    
    &.disabled {
      cursor: not-allowed;
      
      .handle,
      .text .affirmative,
      .text .negative {
        color: #bababa;
        background-color: #eee;
      }
    }

    input {
      display: none;
    }

    input:checked + .bug-fix {
      .text {
        margin-left: 0;
      }

      .handle {
        right: 0;
      }
    }

    label {
      display: block;
      overflow: hidden;
      cursor: pointer;
      border: 1px solid @borderColor;
      border-radius: 3px;
    }

    .text {
      display: block;
      width: 200%;
      margin-left: -100%;
      transition: margin 0.3s ease-in 0s;
      
      .affirmative,
      .negative {
        display: block;
        float: left;
        width: 50%;
        height: 30px;
        padding: 0;
        line-height: 30px;
        font-size: 14px;
        color: white;
        font-weight: 300;
        box-sizing: border-box;
        text-align: center;
      }

      .affirmative {
        padding-left: 5px;
        background-color: @brightGreen;
        color: #fff;
        padding-right: 30px;
      }

      .negative {
        padding-right: 5px;
        background-color: #eee;
        color: #999;
        padding-left: 30px;
      }
    }

    .handle {
      display: block;
      width: 28px;
      background: #fff;
      position: absolute;
      top: 0;
      bottom: 0;
      right: 42px;
      border-radius: 3px;
      border: 1px solid @borderColor;
      transition: all 0.3s ease-in 0s;
    }
  }
}